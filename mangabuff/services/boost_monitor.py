# mangabuff/services/boost_monitor.py
import json
import time
import pathlib
from typing import Dict, Optional, Tuple, Any
from datetime import datetime
import threading

import requests
from bs4 import BeautifulSoup

from mangabuff.config import BASE_URL
from mangabuff.http.http_utils import build_session_from_profile, get, post
from mangabuff.services.club import find_boost_card_info


class BoostMonitor:
    """–ú–æ–Ω–∏—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—É—Å—Ç–∞ –∫–ª—É–±–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –¥–æ–Ω–µ–π—Ç–æ–º"""
    
    def __init__(self, profile_data: Dict, profiles_dir: pathlib.Path, boost_url: str, debug: bool = False):
        self.profile_data = profile_data
        self.profiles_dir = profiles_dir
        self.boost_url = boost_url if boost_url.startswith("http") else f"{BASE_URL}{boost_url}"
        self.debug = debug
        
        # –°–æ—Å—Ç–æ—è–Ω–∏–µ
        self.current_card_id: Optional[int] = None
        self.changes_available: int = 0
        self.can_donate: bool = False
        self.should_stop_trades: bool = False
        self.monitoring: bool = False
        self.last_check: float = 0
        
        # Threading
        self._monitor_thread: Optional[threading.Thread] = None
        self._stop_event = threading.Event()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É –µ—Å–ª–∏ –µ—Å—Ç—å
        self._load_current_card()
    
    def _load_current_card(self) -> None:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç—É –∏–∑ —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ—Å—Ç—å"""
        card_file = self.profiles_dir / "card_for_boost.json"
        if card_file.exists():
            try:
                with card_file.open("r", encoding="utf-8") as f:
                    data = json.load(f)
                self.current_card_id = data.get("card_id")
                if self.debug:
                    print(f"[MONITOR] Loaded current card ID: {self.current_card_id}")
            except Exception as e:
                if self.debug:
                    print(f"[MONITOR] Failed to load current card: {e}")
    
    def parse_boost_page(self) -> Tuple[int, Optional[int], bool, bool]:
        """
        –ü–∞—Ä—Å–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –±—É—Å—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–º–µ–Ω (club-boost__change)
        - ID —Ç–µ–∫—É—â–µ–π –∫–∞—Ä—Ç—ã –¥–ª—è –≤–∫–ª–∞–¥–∞
        - –µ—Å—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∞ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å
        - –µ—Å—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–∞–π—Ç–∏ –∫–∞—Ä—Ç—É
        """
        session = build_session_from_profile(self.profile_data)
        
        try:
            resp = get(session, self.boost_url)
            if resp.status_code != 200:
                return 0, None, False, False
        except requests.RequestException as e:
            if self.debug:
                print(f"[MONITOR] Failed to get boost page: {e}")
            return 0, None, False, False
        
        soup = BeautifulSoup(resp.text, "html.parser")
        
        # 1. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–µ–Ω - –∏—â–µ–º —Ç–µ–∫—Å—Ç –≤–∏–¥–∞ "0 / 10" –≤ club-boost__change
        changes = 0
        change_el = soup.select_one('.club-boost__change div, .club-boost__change span')
        if change_el:
            text = change_el.get_text(strip=True)
            # –ü–∞—Ä—Å–∏–º —Ñ–æ—Ä–º–∞—Ç "X / Y"
            import re
            match = re.search(r'(\d+)\s*/\s*\d+', text)
            if match:
                changes = int(match.group(1))
        
        # 2. ID —Ç–µ–∫—É—â–µ–π –∫–∞—Ä—Ç—ã –¥–ª—è –≤–∫–ª–∞–¥–∞
        card_id = None
        card_link = soup.select_one('a.button.button--block[href*="/cards/"]')
        if card_link:
            href = card_link.get("href", "")
            import re
            match = re.search(r'/cards/(\d+)', href)
            if match:
                card_id = int(match.group(1))
        
        # 3. –ö–Ω–æ–ø–∫–∞ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É
        # –ò—â–µ–º –∫–Ω–æ–ø–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º "–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É" –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–º
        can_donate = False
        donate_button = None
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –∫–Ω–æ–ø–∫–∏ –¥–æ–Ω–µ–π—Ç–∞
        button_selectors = [
            'button.club-boost__btn',
            'button[class*="donate"]',
            'button[class*="boost"]',
            '.club-boost__action button',
            'button'  # Fallback –Ω–∞ –≤—Å–µ –∫–Ω–æ–ø–∫–∏
        ]
        
        for selector in button_selectors:
            buttons = soup.select(selector)
            for btn in buttons:
                btn_text = btn.get_text(strip=True).lower()
                if any(word in btn_text for word in ['–ø–æ–∂–µ—Ä—Ç–≤', '–æ—Ç–¥–∞—Ç—å', '–≤–Ω–µ—Å—Ç–∏', '–¥–æ–±–∞–≤']):
                    donate_button = btn
                    can_donate = True
                    break
            if donate_button:
                break
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –∫–∞—Ä—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
        # –ø–æ —Ç–µ–∫—Å—Ç—É "–£ –≤–∞—Å –µ—Å—Ç—å —ç—Ç–∞ –∫–∞—Ä—Ç–∞"
        has_card_text = soup.find(text=lambda t: t and '—É –≤–∞—Å –µ—Å—Ç—å' in t.lower())
        if has_card_text and not can_donate:
            can_donate = True
        
        # 4. –ö–Ω–æ–ø–∫–∞ "–ù–∞–π—Ç–∏ –∫–∞—Ä—Ç—É" 
        has_find_button = bool(card_link and '–Ω–∞–π—Ç–∏' in card_link.get_text(strip=True).lower())
        
        if self.debug:
            print(f"[MONITOR] Parse result: changes={changes}, card_id={card_id}, can_donate={can_donate}, has_find={has_find_button}")
        
        return changes, card_id, can_donate, has_find_button
    
    def donate_card(self) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST –∑–∞–ø—Ä–æ—Å –Ω–∞ –∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã"""
        session = build_session_from_profile(self.profile_data)
        
        # URL –¥–ª—è –¥–æ–Ω–µ–π—Ç–∞
        donate_url = f"{BASE_URL}/clubs/boost"
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–∞–∫ –≤ HAR —Ñ–∞–π–ª–µ
        headers = {
            "Accept": "*/*",
            "Accept-Language": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
            "Content-Length": "0",
            "Origin": BASE_URL,
            "Referer": self.boost_url,
            "X-Requested-With": "XMLHttpRequest",
        }
        
        # –î–æ–±–∞–≤–ª—è–µ–º CSRF —Ç–æ–∫–µ–Ω –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
        if "X-CSRF-TOKEN" in session.headers:
            headers["X-CSRF-TOKEN"] = session.headers["X-CSRF-TOKEN"]
        elif self.profile_data.get("client_headers", {}).get("x-csrf-token"):
            headers["X-CSRF-TOKEN"] = self.profile_data["client_headers"]["x-csrf-token"]
        
        try:
            # POST –∑–∞–ø—Ä–æ—Å —Å –ø—É—Å—Ç—ã–º —Ç–µ–ª–æ–º
            resp = post(session, donate_url, headers=headers, data="")
            
            if resp.status_code == 200:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
                try:
                    result = resp.json()
                    if self.debug:
                        print(f"[MONITOR] Donate response: {json.dumps(result, ensure_ascii=False)[:200]}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—é
                    message = result.get("message", "").lower()
                    if "–≤–Ω–µ—Å–ª–∏ –≤–∫–ª–∞–¥" in message or "—É—Å–ø–µ—à" in message or "–ø—Ä–∏–Ω—è—Ç" in message:
                        print(f"‚úÖ –ö–∞—Ä—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∞ –≤ –∫–ª—É–±!")
                        return True
                except Exception:
                    # –ï—Å–ª–∏ –Ω–µ JSON, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç
                    if "—É—Å–ø–µ—à" in resp.text.lower():
                        print(f"‚úÖ –ö–∞—Ä—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∞ –≤ –∫–ª—É–±!")
                        return True
                
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É: {resp.status_code}")
                return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–∏ –∫–∞—Ä—Ç—ã: HTTP {resp.status_code}")
                return False
                
        except requests.RequestException as e:
            print(f"‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–∏: {e}")
            return False
    
    def check_and_process(self) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Ü–µ–ª–µ–≤—É—é –∫–∞—Ä—Ç—É –¥–ª—è –æ–±–º–µ–Ω–æ–≤.
        """
        changes, card_id, can_donate, has_find_button = self.parse_boost_page()
        
        self.changes_available = changes
        card_changed = False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –∫–∞—Ä—Ç–∞
        if card_id and card_id != self.current_card_id:
            print(f"üîÑ –ö–ª—É–±–Ω–∞—è –∫–∞—Ä—Ç–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å: {self.current_card_id} ‚Üí {card_id}")
            self.current_card_id = card_id
            card_changed = True
        
        # –ï—Å–ª–∏ –º–æ–∂–µ–º –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É
        if can_donate and not self.can_donate:
            print(f"üíé –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É!")
            self.can_donate = True
            self.should_stop_trades = True
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–æ–Ω–µ–π—Ç
            if self.donate_card():
                # –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–Ω–µ–π—Ç–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç—É
                time.sleep(2)  # –î–∞–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä—É –æ–±–Ω–æ–≤–∏—Ç—å—Å—è
                
                # –ü–∞—Ä—Å–∏–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É –¥–ª—è –≤–∫–ª–∞–¥–∞
                print(f"üîç –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É –¥–ª—è –≤–∫–ª–∞–¥–∞...")
                res = find_boost_card_info(self.profile_data, self.profiles_dir, self.boost_url, debug=self.debug)
                
                if res:
                    new_card_id, out_path = res
                    self.current_card_id = new_card_id
                    
                    # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç—ã
                    try:
                        with out_path.open("r", encoding="utf-8") as f:
                            card_data = json.load(f)
                        print(f"‚úÖ –ù–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –¥–ª—è –≤–∫–ª–∞–¥–∞:")
                        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {card_data.get('name', '')}")
                        print(f"   ID: {card_data.get('card_id')} | –†–∞–Ω–≥: {card_data.get('rank')}")
                        print(f"   –í–ª–∞–¥–µ–ª—å—Ü–µ–≤: {card_data.get('owners_count')} | –ñ–µ–ª–∞—é—â–∏—Ö: {card_data.get('wanters_count')}")
                    except Exception:
                        print(f"‚úÖ –ù–æ–≤–∞—è –∫–∞—Ä—Ç–∞ {new_card_id} –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                    
                    card_changed = True
                    self.should_stop_trades = False  # –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –æ–±–º–µ–Ω—ã
                else:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É –¥–ª—è –≤–∫–ª–∞–¥–∞")
            
            self.can_donate = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (—Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É)
        current_time = time.time()
        if current_time - self.last_check > 60:
            print(f"üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±—É—Å—Ç–∞: –∑–∞–º–µ–Ω—ã={changes}/10, –∫–∞—Ä—Ç–∞={card_id}, –¥–æ–Ω–µ–π—Ç={'–¥–∞' if can_donate else '–Ω–µ—Ç'}")
            self.last_check = current_time
        
        return card_changed
    
    def start_monitoring(self, check_interval: float = 5.0):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        if self.monitoring:
            return
        
        self.monitoring = True
        self._stop_event.clear()
        
        def monitor_loop():
            print(f"üîç –ó–∞–ø—É—â–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—É—Å—Ç–∞ (–∏–Ω—Ç–µ—Ä–≤–∞–ª: {check_interval}—Å)")
            
            while not self._stop_event.is_set():
                try:
                    card_changed = self.check_and_process()
                    
                    if card_changed:
                        # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã
                        print(f"üì¢ –ö–∞—Ä—Ç–∞ –¥–ª—è –≤–∫–ª–∞–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞! –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–±–º–µ–Ω—ã.")
                    
                except Exception as e:
                    if self.debug:
                        print(f"[MONITOR] Error in monitoring loop: {e}")
                
                # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
                self._stop_event.wait(check_interval)
            
            print(f"üõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±—É—Å—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        self._monitor_thread = threading.Thread(target=monitor_loop, daemon=True)
        self._monitor_thread.start()
    
    def stop_monitoring(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"""
        if not self.monitoring:
            return
        
        self.monitoring = False
        self._stop_event.set()
        
        if self._monitor_thread:
            self._monitor_thread.join(timeout=2.0)
            self._monitor_thread = None
    
    def should_pause_trades(self) -> bool:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –æ–±–º–µ–Ω–æ–≤"""
        return self.should_stop_trades


def monitor_boost_with_trades(
    profile_data: Dict,
    profiles_dir: pathlib.Path, 
    boost_url: str,
    trade_function,  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±–º–µ–Ω–æ–≤
    trade_kwargs: Dict[str, Any],  # –ê—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–º–µ–Ω–æ–≤
    check_interval: float = 5.0,
    debug: bool = False
) -> None:
    """
    –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±—É—Å—Ç–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º –æ–±–º–µ–Ω–æ–≤.
    
    Args:
        profile_data: –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
        profiles_dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π
        boost_url: URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—É—Å—Ç–∞
        trade_function: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±–º–µ–Ω–æ–≤ (send_trades_to_online_owners)
        trade_kwargs: –°–ª–æ–≤–∞—Ä—å —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –¥–ª—è trade_function
        check_interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        debug: –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
    """
    monitor = BoostMonitor(profile_data, profiles_dir, boost_url, debug=debug)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    monitor.start_monitoring(check_interval)
    
    try:
        while True:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±–º–µ–Ω—ã
            if monitor.should_pause_trades():
                print("‚è∏Ô∏è  –û–±–º–µ–Ω—ã –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (–æ–∂–∏–¥–∞–Ω–∏–µ –¥–æ–Ω–µ–π—Ç–∞)")
                time.sleep(5)
                continue
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É –¥–ª—è –æ–±–º–µ–Ω–æ–≤
            card_file = profiles_dir / "card_for_boost.json"
            if not card_file.exists():
                print("‚ùå –§–∞–π–ª —Å –∫–∞—Ä—Ç–æ–π –¥–ª—è –≤–∫–ª–∞–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                time.sleep(10)
                continue
            
            try:
                with card_file.open("r", encoding="utf-8") as f:
                    target_card = json.load(f)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–∞—Ä—Ç—ã: {e}")
                time.sleep(10)
                continue
            
            # –û–±–Ω–æ–≤–ª—è–µ–º target_card –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö
            trade_kwargs["target_card"] = target_card
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–º–µ–Ω—ã
            print(f"üöÄ –ó–∞–ø—É—Å–∫ –æ–±–º–µ–Ω–æ–≤ –¥–ª—è –∫–∞—Ä—Ç—ã ID={target_card.get('card_id')}")
            try:
                stats = trade_function(**trade_kwargs)
                
                # –ï—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –≤—Å–µ—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤, –∂–¥–µ–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                if stats.get("owners_seen", 0) == 0:
                    print("üí§ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤, –æ–∂–∏–¥–∞–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥...")
                    time.sleep(60)
                else:
                    # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ü–∏–∫–ª–∞–º–∏
                    time.sleep(5)
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±–º–µ–Ω–æ–≤: {e}")
                time.sleep(30)
    
    except KeyboardInterrupt:
        print("\n‚õî –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ Ctrl+C")
    finally:
        monitor.stop_monitoring()